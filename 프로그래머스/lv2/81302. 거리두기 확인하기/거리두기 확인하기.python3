place = ["POOOP", "OXXOX", "OPXPX", "OOXOX", "POXXP"]
from collections import deque


def bfs(place):
    start_points = [(i, j) for j in range(5) for i in range(5) if place[i][j] == 'P']

    for start in start_points:
        q = deque([start])
        visited = [[0]*5 for _ in range(5)]
        distance = [[0]*5 for _ in range(5)]
        visited[start[0]][start[1]] = 1

        while q:
            y, x = q.popleft()

            dx = [-1, 1, 0, 0]
            dy = [0, 0, -1, 1]

            for i in range(4): #상하좌우 살핀다.
                nx = x + dx[i]
                ny = y + dy[i]

                if 0<=nx<5 and 0<=ny<5 and visited[ny][nx] == 0: #범위 내에 있고, 방문한 적이 없다면,
                    if place[ny][nx] == 'O':
                        q.append([ny, nx])
                        visited[ny][nx] = 1
                        distance[ny][nx] = distance[y][x] + 1
                        
                    elif place[ny][nx] == 'P' and distance[y][x] < 2:
                        return 0
    return 1

def solution(places):
    return [bfs(p) for p in places]