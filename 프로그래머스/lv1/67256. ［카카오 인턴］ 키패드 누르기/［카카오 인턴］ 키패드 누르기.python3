def number_distance(left_loc, right_loc, num, hand):
    num_xy = {
        1: (0, 3), 2: (1, 3), 3: (2, 3),
        4: (0, 2), 5: (1, 2), 6: (2, 2),
        7: (0, 1), 8: (1, 1), 9: (2, 1),
        '*': (0, 0), 0: (1, 0), '#': (2, 0)
    }

    left_distance = abs(num_xy[left_loc][0] - num_xy[num][0]) + abs(num_xy[left_loc][1] - num_xy[num][1])
    right_distance = abs(num_xy[right_loc][0] - num_xy[num][0]) + abs(num_xy[right_loc][1] - num_xy[num][1])

    if left_distance == right_distance:
        return hand[0].upper()

    elif left_distance > right_distance:
        return 'R'

    elif left_distance < right_distance:
        return 'L'

def solution(numbers, hand):
    answer = ''
    left_location_history = ['*']
    right_location_history = ['#']

    for i in numbers:
        if i in [1, 4, 7]:
            answer += 'L'
            left_location_history.append(i)

        elif i in [3, 6, 9]:
            answer += 'R'
            right_location_history.append(i)

        # 2,5,8,0 일 때
        else:
            left_now_location = left_location_history[-1]
            right_now_location = right_location_history[-1]
            
            result = number_distance(left_now_location, right_now_location, i, hand)
            answer += result
            
            if result == 'L':
                left_location_history.append(i)
            elif result == 'R':
                right_location_history.append(i)
                
    return answer